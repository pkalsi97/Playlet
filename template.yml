# Do Not Touch This unless you know what you are doing! Unverified Errors can lead to Deployment Failure or Deletion of Resources 
AWSTemplateFormatVersion: 2010-09-09
Description: A Serverless & Loosely Coupled Video Transcoding & Delivery Project
Transform: AWS::Serverless-2016-10-31

Globals:
  Function:
    PermissionsBoundary: !Sub arn:${AWS::Partition}:iam::${AWS::AccountId}:policy/${AppId}-${AWS::Region}-PermissionsBoundary
    LoggingConfig:
      ApplicationLogLevel: WARN
      LogFormat: JSON
      LogGroup: !Ref BackendLogGroup
      SystemLogLevel: WARN
    Tags:
      Application: !Sub ${AppId}
      Environment: Production

Parameters:
  AppId:
    Type: String

Resources:
  # Common Logging Group for all lambda
  BackendLogGroup:
    Type: AWS::Logs::LogGroup
    DeletionPolicy: Retain
    Properties:
      LogGroupName: !Sub /aws/lambda/${AppId}-Backend-Function-Logs
  # User Pool
  UserPool:
    Type: AWS::Cognito::UserPool
    Properties:
      UserPoolName: !Sub ${AppId}-userpool
      AdminCreateUserConfig:
        AllowAdminCreateUserOnly: false
      AccountRecoverySetting:
        RecoveryMechanisms:
          - Name: admin_only
            Priority: 1
      DeletionProtection: ACTIVE
      MfaConfiguration: 'OFF'
      UsernameConfiguration:
        CaseSensitive: true
      UsernameAttributes:
        - email
      Schema:
        - AttributeDataType: String
          Mutable: true
          Name: email
          Required: true
      Policies:
        PasswordPolicy:
          MinimumLength: 8
          RequireLowercase: false
          RequireNumbers: false
          RequireSymbols: false
          RequireUppercase: false
  # User Pool Client
  UserPoolClient:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      ClientName: !Sub ${AppId}-client
      AccessTokenValidity: 24
      IdTokenValidity: 24
      RefreshTokenValidity: 365
      SupportedIdentityProviders:
        - COGNITO
      UserPoolId: !Ref UserPool
      GenerateSecret: false
      ExplicitAuthFlows:
        - ALLOW_USER_PASSWORD_AUTH
        - ALLOW_REFRESH_TOKEN_AUTH
      PreventUserExistenceErrors: ENABLED
  helloFromLambdaFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./
      Handler: src/handlers/hello-from-lambda.helloFromLambdaHandler
      Runtime: nodejs18.x
      MemorySize: 128
      Timeout: 60
      Description: A Lambda function that returns a static string.
      Policies:
        - AWSLambdaBasicExecutionRole